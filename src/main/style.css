:root {
    --bg-color: #1f1f27;
    --reminder-list-bg-color: #383841;
    --input-color: rgb(90, 87, 87);
    --input-invalid-color: #FA2333;
    --input-success-color: #22F095;
    --header-fallback-height: 1rem;

    --checkbox-height: 1.75rem;
    --checkbox-width: 3.5rem;
    --checkbox-margin: 8px;

    --focus-visible-outline: 3px solid blanchedalmond;

    --input-font-size: 1.25rem;
    --input-char-size: 40ch;
}

*, *::before, *::after {
    box-sizing: border-box;
    font-family: 'Ubuntu', sans-serif;
}

body {
    background: var(--bg-color) !important;
    min-block-size: 100dvh;
    margin: auto;
    height: 100dvh;
    overflow: hidden;
}

main {
    margin: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    height: calc(100dvh - env(titlebar-area-height, var(--header-fallback-height)));
    overflow: auto;
}

.preload *,
.preload *::after,
.preload *::before {
    transition: none !important;
}

.titlebar {
    color: white;
    background: #8a2be2;
    display: flex;
    align-items: center;
    font-size: .75em;
    font-weight: bold;
    position: relative;

    padding-left: calc(env(titlebar-area-x, 0) + 4px);

    -webkit-app-region: drag;
    user-select: none;
    -webkit-user-select: none;

    top: env(titlebar-area-y, 0);
    height: env(titlebar-area-height, var(--header-fallback-height));
    min-width: env(titlebar-area-width, 100%);
}

.titlebar img {
    width: 16px;
    height: 16px;
}

section {
    display: flex;
    justify-content: start;
    align-items: center;
    color: white;
    flex-direction: column;
}

#reminder-list {
    height: 100%;

    width: 90%;
    min-width: fit-content;
    max-width: 800px;

    margin: 0 10px;
}

#reminder-list > * {
    font-size: 1.35rem;
}

#reminder-list > * {
    margin: 16px;
}

#reminder-list > ul {
    display: flex;
    flex-direction: column;
    align-items: center;

    background: var(--reminder-list-bg-color);
    border-radius: 8px;
    overflow-y: auto;
    overflow-x: hidden;
    padding: 10px;
    justify-content: unset;
    list-style: none;
    list-style-type: none;
    margin: 0;
    gap: 6px;

    min-height: 6.8rem;
    width: 100%;
}

#reminder-list > button {
    width: 100%;
}

.reminder {
    display: grid;
    grid-template-columns: 8fr 1fr 1fr 1fr;
    grid-template-rows: 100%;
    
    border-radius: 8px;
    padding: 10px;
    margin: 0 6px;
    box-shadow: 0 1px 2px black;
    background: #383873;
    width: 100%;
    min-width: fit-content;
    gap: 10px;
}

.reminder p {
    font-weight: bold;
    grid-column: 1 3;
    align-self: center;
}

.reminder button {
    align-self: center;
}

.reminder .next-timer-play {
    text-decoration: underline blueviolet;
    font-style: normal;
    font-weight: normal;
    text-align: center;
}

.reminder-form {
    color: white;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2px 8px;
    font-size: var(--input-font-size);
    width: var(--input-char-size);
    margin: 8px;
}

.reminder-form * {
    grid-column: 1 / span 3;
}

.reminder-form > input[type="checkbox"] + label {
    justify-self: start;
}

.reminder-form button:first-of-type {
    grid-column: 1 / span 2;
}

.reminder-form button:last-of-type {
    grid-column: 3 / span 1;
}

.reminder-form label {
    font-size: 1.2rem;
}

.reminder-form input,
.reminder-form textarea {
    margin-bottom: 6px;
}

input,
button,
textarea {
    background-color: var(--input-color);
    border-radius: 4px;
    color: white;
    transition: all 250ms;
    padding: 8px;
    font-size: var(--input-font-size);
    border: 1px solid rgb(21, 21, 21);
    box-shadow: 0 0.75px 3px black;
    transition: opacity 250ms;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

input[type=number] {
    -moz-appearance: textfield;
    appearance: textfield;
}

input, 
textarea {
    width: 100%;
}

button {
    padding: 20px;
    border-radius: 10px;
    position: relative;
    transition: all 250ms;
}

button img {
    filter: invert(100%);
    min-height: 2em;
    min-width: 2em;
}

#reminder-list li > button {
    min-width: 60px;
    padding: 5px;
    aspect-ratio: 1;
}

button:focus-visible, 
button:hover,
input[type="checkbox"]:focus-visible + label::after,
input[type="checkbox"]:hover + label::after {
    background-color: #8a2be2;
}

button:focus-visible, 
input[type="checkbox"]:focus-visible + label::after {
    outline: var(--focus-visible-outline);
}

button[action="destructive"]:focus-visible, 
button[action="destructive"]:hover {
    background-color: var(--input-invalid-color);
}

input:disabled { 
    opacity: 0.5;
}

input[type="checkbox"] {
    opacity: 0;
    position: absolute;

    /* So they cannot be clicked */
    z-index: -1;
}

input[type="checkbox"] + label {
    position: relative;
    height: 100%;
    line-height: 150%;
    text-align: center;
    display: inline-block;

    left: calc((var(--checkbox-width) + var(--checkbox-margin)));
}

/* Styles the checkbox's background */
input[type="checkbox"] + label::before {
    content: '';
    top: 0;
    background-color: var(--input-invalid-color);
    border-radius: 20px;
    line-height: 20px;
    border: 2px solid rgb(21, 21, 21);
    box-shadow: 0 2px 2px black;

    position: absolute;
    display: inline-block;
    height: var(--checkbox-height);
    width: var(--checkbox-width);
    left: calc(-1 * (var(--checkbox-width) + var(--checkbox-margin)));

    transition: all 250ms;
}

/* Changes the checkbox's background color when checked */
input[type="checkbox"]:checked + label::before {
    background-color: var(--input-success-color);
}

/* Styles the checkbox's little notch */
input[type="checkbox"] + label::after {
    content: '';
    background-color: var(--input-color);
    border-radius: 100%;
    box-shadow: 0 2px 2px black;

    height: var(--checkbox-height);
    width: calc(var(--checkbox-width) * 0.5);
    position: absolute;
    left: calc(-1 * (var(--checkbox-width) + var(--checkbox-margin)));
    top: 0;

    transition: all 250ms;
}

/* Shifts the notch over to the other side of the checkbox when it is 
checked */
input[type="checkbox"]:checked + label::after {
    left: calc(-1 * (var(--checkbox-width) + var(--checkbox-margin)) + (var(--checkbox-width)) * 0.5);
}

.reminder-form textarea {
    display: block;
    resize: none;
}

.reminder-form input:not(:placeholder-shown):not(:focus):invalid {
    border-color: var(--input-invalid-color);
}

.popup-container {
    position: fixed;
    inset: 0;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background: radial-gradient(rgb(0,0,0,0.2), rgb(0,0,0,0.35));
    visibility: hidden;
}

.popup-container > section {
    padding: 8px;
    background-color: var(--bg-color);
    box-shadow: 0 8px 8px black;
    border-radius: 16px;
    border: blueviolet 1px solid;

    width: 40%;
    min-width: fit-content;
    max-width: 500px;

    height: 30%;
    min-height: 220px;
    max-height: 350px;
}

.popup-container > section > * {
    text-align: center;
}

.popup-container > section > h2 {
    font-size: 3.5ch;
    font-weight: bold;
    text-decoration: underline;
}

.popup-container p {
    font-size: 1.35rem;
}

.popup-button {
    margin-top: auto;
    visibility: inherit;
}

.show-popup {
    visibility: visible;
    animation: popup-in 250ms ease-in-out;
}

.hide-popup {
    animation: popup-out 250ms ease-in-out;
}

@keyframes popup-in {
    from {
        opacity: 0;
        transform: translateY(6%);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes popup-out {
    from {
        opacity: 1;
        transform: translateY(0);
    }

    to {
        opacity: 0;
        transform: translateY(6%);
    }

    100% {
        visibility: hidden;
    }
}

@keyframes shake {
    0% {
        transform: translateX(0);
    }

    30% {
        transform: translateX(1%);
    }

    70% {
        transform: translateX(-1%);
    }

    100% {
        transform: translateX(0);
    }
}

.shake {
    animation: shake 250ms ease-out normal;
}